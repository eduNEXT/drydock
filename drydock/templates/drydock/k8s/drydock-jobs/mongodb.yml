
apiVersion: batch/v1
kind: Job
metadata:
  name: drydock-mongodb-job
  labels:
    drydock.io/component: job
    drydock.io/target-service: mongodb
    drydock.io/runner-service: mongodb
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  ttlSecondsAfterFinished: 100
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: mongodb
        image: {{ DOCKER_IMAGE_MONGODB }}
        command:
          - /bin/sh
          - -c
          - -e
        args:
        - |
          echo "Initialising MongoDB..."
          mongo --host {{MONGODB_HOST }} -u "{{ MONGODB_ROOT_USERNAME }}" -p "{{ MONGODB_ROOT_PASSWORD }}" admin <<EOF
            {%- if MONGODB_USERNAME %}
            if (db.getUser("{{ MONGODB_USERNAME }}") == null) {
              db.createUser({
                  user: "{{ MONGODB_USERNAME }}",
                  pwd:  "{{ MONGODB_PASSWORD }}",
                  roles: [
                    { role: "readWrite", db: "{{ MONGODB_DATABASE }}" },
                    {% if FORUM_DOCKER_IMAGE is defined %}{ role: "readWrite", db: "{{ FORUM_MONGODB_DATABASE }}" },{% endif %}
                  ]
              })
            } else {
              db.updateUser("{{ MONGODB_USERNAME }}", {
                pwd: "{{ MONGODB_PASSWORD }}",
                roles: [
                  { role: "readWrite", db: "{{ MONGODB_DATABASE }}" },
                  {% if FORUM_DOCKER_IMAGE is defined %}{ role: "readWrite", db: "{{ FORUM_MONGODB_DATABASE }}" },{% endif %}
                ]
              })
            }
            {%- endif %}
            {{ patch("drydock-mongodb-init-job") }}
            exit
          EOF
